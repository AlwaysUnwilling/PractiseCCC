#define _CRT_SECURE_NO_WARNINGS 1
#include<string.h>
#include<stdio.h>
// 题目：合并俩个有序数组：给定俩个有序数组nums1和nums2。请你将nums2合并到nums1中，使nums1成为一个有序数组
//void mergeSort(int* nums1, int* nums2, int nums2Size,int nums1Size)
//{
//	int* tmp = (int*)malloc(sizeof(int) * (nums2Size + nums1Size));
//	int nums1_ps = 0;
//	int nums2_ps = 0;
//	int i = 0;
//	while (nums1_ps<nums1Size && nums2_ps<nums2Size)
//	{
//		if (nums1[nums1_ps] <= nums2[nums2_ps])
//		{
//			tmp[i] = nums1[nums1_ps];
//			i++;
//			nums1_ps++;
//		}
//		else
//		{
//			tmp[i] = nums2[nums2_ps];
//			nums2_ps++;
//			i++;
//		}
//	}
//	if (nums1_ps == nums1Size)
//	{
//		while (nums2_ps < nums2Size)
//		{
//			tmp[i] = nums2[nums2_ps];
//			i++;
//			nums2_ps++;
//		}
//	}
//	else if(nums2_ps==nums2Size)
//	{
//		while (nums1_ps < nums1Size)
//		{
//			tmp[i] = nums1[nums1_ps];
//			i++;
//			nums1_ps++;
//		}
//	}
//	for (i = 0; i < nums2Size + nums1Size; i++)
//	{
//		nums1[i] = tmp[i];
//		printf("%d ", nums1[i]);
//	}
//	free(tmp);
//	tmp = NULL;
//}
void mergeSort(int* nums1, int* nums2, int nums2Size, int nums1Size)
{
	int src = 0;
	int dst = 0;
	int i = 0;
	int tmp = nums1[nums1Size - 1];
	while (src < nums2Size && dst<nums1Size+src)
	{
		if (nums1[dst] >= nums2[src])
		{
			for (i = nums1Size+src; i>dst; i--)
			{
				nums1[i] = nums1[i-1];
			}
			nums1[dst] = nums2[src];
			dst++;
			src++;
		}
		else
		{
			dst++;
		}
	}
	while (src < nums2Size)
	{
		nums1[dst] = nums2[src];
		++src;
		++dst;
	}
	for (i = 0; i < nums1Size + nums2Size; i++)
	{
		printf("%d ", nums1[i]);
	}
}
int main()
{
	int nums1[100] = { 1,3,5,7,9,11 };
	int nums2[7] = {0,0,0,0,0,0,0};
	mergeSort(nums1, nums2, 7,6);
	return 0;
}