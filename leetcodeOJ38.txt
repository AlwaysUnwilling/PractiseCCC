两两交换链表中的节点：给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。
你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head==nullptr || head->next==nullptr)
        {
            return head;
        }
        ListNode* newhead=new ListNode;
        newhead->next=head;
        ListNode* cur=head;
        ListNode* prev=newhead;
        ListNode* next=cur->next;
        while(cur && cur->next)
        {
            prev->next=next;
            cur->next=next->next;
            next->next=cur;
            prev=cur;
            cur=cur->next;
            if(cur)
            {
                next=cur->next;
            }  
        }
        ListNode* _head=newhead->next;
        delete newhead;
        return _head;
    }
};