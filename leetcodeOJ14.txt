//根据二叉树创建字符串：你需要采用前序遍历的方式，将一个二叉树转换成一个由括号和整数组成的字符串。
空节点则用一对空括号 "()" 表示。而且你需要省略所有不影响字符串与原始二叉树之间的一对一映射关系的空括号对。
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string tree2str(TreeNode* root) {
      if(root==nullptr)
      return nullptr;
      string str;
      str+=to_string(root->val);
      if(root->left)
      {
          str+="(";
          str+=tree2str(root->left);
          str+=")";
      }
      else if(root->right)
      {
          str+="()";
      }
      if(root->right)
      {
          str+="(";
         str+= tree2str(root->right);
          str+=")";
      }
      return str;
    }
};