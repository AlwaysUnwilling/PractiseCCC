//题目：给你二叉树的根结点 root ，请你将它展开为一个单链表：
//展开后的单链表应该同样使用 TreeNode ，其中 right 子指针指向链表中下一个结点，而左子指针始终为 null 。
//展开后的单链表应该与二叉树 先序遍历 顺序相同。
//方法一：
void flatten(struct TreeNode *root) {
    if (root == NULL) {
        return;
    }
    struct TreeNode **stk = (struct TreeNode **)malloc(sizeof(struct TreeNode *));
    int stk_top = 1;
    stk[0] = root;
    struct TreeNode *prev = NULL;
    while (stk_top != 0) {
        struct TreeNode *curr = stk[--stk_top];
        if (prev != NULL) {
            prev->left = NULL;
            prev->right = curr;
        }
        struct TreeNode *left = curr->left, *right = curr->right;
        if (right != NULL) {
            stk_top++;
            stk = (struct TreeNode **)realloc(stk, sizeof(struct TreeNode *) * stk_top);
            stk[stk_top - 1] = right;
        }
        if (left != NULL) {
            stk_top++;
            stk = (struct TreeNode **)realloc(stk, sizeof(struct TreeNode *) * stk_top);
            stk[stk_top - 1] = left;
        }
        prev = curr;
    }
    free(stk);
}
//方法2：
void flatten(struct TreeNode* root) {
    struct TreeNode* curr = root;
    while (curr != NULL) {
        if (curr->left != NULL) {
            struct TreeNode* next = curr->left;
            struct TreeNode* predecessor = next;
            while (predecessor->right != NULL) {
                predecessor = predecessor->right;
            }
            predecessor->right = curr->right;
            curr->left = NULL;
            curr->right = next;
        }
        curr = curr->right;
    }
}
