合并两个有序链表：将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==nullptr && l2==nullptr)
        {
            return nullptr;
        }
        ListNode* cur1=l1;
        ListNode* cur2=l2;
        if(l1==nullptr)
        {
            return l2;
        }
        if(l2==nullptr)
        {
            return l1;
        }
        ListNode* newHead=new ListNode;
        newHead->next=nullptr;
        ListNode* tail=newHead;
        while(cur1 && cur2)
        {
            if(cur1->val>cur2->val)
            {
                tail->next=cur2;
                tail=tail->next;
                cur2=cur2->next;
                tail->next=nullptr;
            }  
            else
            {
                tail->next=cur1;
                tail=tail->next;
                cur1=cur1->next;
                tail->next=nullptr;
            }
        }
        while(cur1)
        {
            tail->next=cur1;
            cur1=cur1->next;
            tail=tail->next;
            tail->next=nullptr;
        }
        while(cur2)
        {
            tail->next=cur2;
            cur2=cur2->next;
            tail=tail->next;
            tail->next=nullptr;
        }
        ListNode* l3=newHead->next;
        delete newHead;
        return l3;
    }
};