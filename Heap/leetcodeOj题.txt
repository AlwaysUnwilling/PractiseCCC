题目：二叉树的最小深度
给定一个二叉树，找出其最小深度。
最小深度是从根节点到最近叶子节点的最短路径上的节点数量。
说明：叶子节点是指没有子节点的节点。
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
int minDepth(struct TreeNode* root){
    if(root==NULL) return 0;
    if(root->right==NULL && root->left!=NULL)
        return minDepth(root->left)+1;
    if(root->right!=NULL && root->left==NULL)
        return minDepth(root->right)+1;
    else
    {
        int rightdepth=minDepth(root->right);
        int leftdepth=minDepth(root->left);
        return rightdepth>leftdepth?leftdepth+1:rightdepth+1;
    }
}

//方法2.
int minDepth(struct TreeNode *root) {
    if (root == NULL) {
        return 0;
    }

    if (root->left == NULL && root->right == NULL) {
        return 1;
    }

    int min_depth = INT_MAX;
    if (root->left != NULL) {
        min_depth = fmin(minDepth(root->left), min_depth);
    }
    if (root->right != NULL) {
        min_depth = fmin(minDepth(root->right), min_depth);
    }

    return min_depth + 1;
}
