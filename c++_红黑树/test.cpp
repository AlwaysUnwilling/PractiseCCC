#include"RBTree.h"

//红黑树：搜索二叉树，结点中增加了颜色，不是红色就是黑色，树中最长路径不超过最短路径的二倍。  
//AVL树是严格平衡二叉搜索树；红黑树是近似平衡二叉搜索树。
//红黑树的性质
//1. 每个结点不是红色就是黑色
//2. 根节点是黑色的 
//3. 如果一个节点是红色的，则它的两个孩子结点是黑色的   解释：树中不存在连续的红结点，但可以存在连续的黑结点
//4. 对于每个结点，从该结点到其所有后代叶结点的简单路径上，均 包含相同数目的黑色结点 
//5. 每个叶子结点都是黑色的(此处的叶子结点指的是空节点)
//红黑树的最短路径：全黑；
//红黑树最长路径：一黑一红；所以最多是二倍

int main()
{
	TestRBTree();
	return 0;
}