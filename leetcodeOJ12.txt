 //题目：数组中的第K个最大元素：在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int> pq;
        for(auto e:nums)
        {
            pq.push(e);
        }
        while(--k)
        {
            pq.pop();
        }
        return pq.top();
    }
};
//更优解
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
       //建立一个k元素的小堆
       //时间复杂度O（N*logK）
       //空间复杂度O（k）
       priority_queue<int,vector<int>,greater<int>> pq;
       //插入nums的k个数据
       size_t i=0;
       for(;i<k;++i)
       pq.push(nums[i]);

       //比pq.top()大的数据入堆
       for(;i<nums.size();++i)
       {
           if(nums[i]>pq.top())
           {
               pq.pop();
               pq.push(nums[i]);
           }
       }
        return pq.top();
    }
};