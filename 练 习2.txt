#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>
int NUM(int a, int b)
{
	int i = 0;
	int count = 0;
	for (i = 0; i < 32; i++)
	{
		int c = a >> i & 1;
		int d = b >> i & 1;
		if (c != d)
		{
			count ++;
		}
	}
	return count;
}
int main()
{
	//int a = 1999;
	//int b = 2299;
	int a = 0;
	int b = 0;
	scanf("%d %d", &a, &b);
	int num = NUM(a, b);
	printf("%d\n", num);
	return 0;
}


int NUM(int a, int b)
{
	int count = 0;
	int c = a ^ b;
	while (c)
	{
		c=c& (c - 1);
		count++;
	}
	return count;
}
int main()
{
	//int a = 1999;
	//int b = 2299;
	int a = 0;
	int b = 0;
	scanf("%d %d", &a, &b);
	int num = NUM(a, b);
	printf("num=%d\n", num);
	return 0;
}

void get_J_O_bit(int a)
{
	int i = 0;
	for (i = 0; i < 16; i++)
	{
		printf("%d ", a >> (2 * i + 1) & 1);//i=1,i+=2
	}
	printf("\n");
	for (i = 0; i < 16; i++)
	{
		printf("%d ", a >> (2 * i ) & 1);//i+=2
	}
}
int main()
{
	int a = 0;
	scanf("%d", &a);
	get_J_O_bit(a);
	return 0;
}


void print(int a)
{
	int i = 0;
	int j = 0;
	for (i = 1; i<=a; i++)
	{
		
		for (j = 1; j <= i; j++)
		{
			printf("%d*%d=%-4d  ", i,j,i * j);
			
		}
		printf("\n");
	}
}
int main()
{
	int a = 0;
	scanf("%d", &a);
	print(a);
	return 0;
}


int print(int n)
{
	int num = 0;
	if (n >1) {
	 num=n * print(n - 1);
	}
	if(n==1) {
		num = n;
	}
	return num;
}
int print(int n)
{
	int i = 0;
	int num = 1;
		for (i = 1; i <= n; i++)
		{
			num = i * num;
		}
		return num;
}
int main()
{
	int num = 0;
	int n = 0;
	scanf("%d", &n);
	num=print(n);
	printf("%d\n", num);
	return 0;
}


int print(int a)
{
	if (a > 9)
	{
		print( a / 10);
	}
	printf("%d ", a % 10);
	return 0;
}
int main()
{
	int a = 0;
	scanf("%d", &a);
	print(a);
	return 0;
}


int my_strlen(char* arr)
{
	int count = 0;
	while (*arr != '\0')
	{
		count++;
		arr ++;
	}
	return count;
}
void reverse_string(char* arr)// int sz)
 {
	int tmp = 0;
	int left = 0;
	int right = my_strlen(arr)-1;
	//int right = sz;
	while (left < right)
	{
		tmp = arr[left];
	    arr[left] = arr[right];
		arr[right] = tmp;
		left++;
		right--;
	}
		printf("%s", arr);
 }