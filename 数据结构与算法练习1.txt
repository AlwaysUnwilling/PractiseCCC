#define _CRT_SECURE_NO_WARNINGS 1
#include<string.h>
#include<stdio.h>
//题目：原地移除数组中所有的元素val，要求时间复杂度为O(N)，空间复杂度为O(1)。
//int removeElement(int* nums, int numsSize, int val)
//{
//	int* src = nums;
//	int* dst = nums;
//	int j = 0;
//	for (int i = 0; i < numsSize; i++)
//	{
//		if (src[i] != val)
//		{
//			src[i] = dst[j];
//			j++;
//		}
//	}
//	return j;
//}
//int main()
//{
//	int nums[10] = { 1,2,3,4,3,3,5,6,3,9 };
//	int ret=removeElement(nums, 10, 3);
//	printf("%d\n", ret);
//	return 0;
//}

// 题目：给定一个排序数组，你需要在原地删除重复出现的元素。使得每个元素只出现一次，返回移除后数组的长度。
//      要求：不要使用额外的数组空间，你必须在原地修改输入数组，并在使用O(1)额外空间的条件下完成。

int removeDuplicates(int* nums, int numsSize)
{
	if (numsSize == 0)
	{
		return 0;
	}
	int src = 0;
	int dst = 0;
	int flag = 0;
	while (src < numsSize-1)
	{
		if (nums[src] != nums[src + 1])
		{
			nums[dst] = nums[src];
			src++;
			dst++;
		}
		else
		{
			src++;
		}
	}
	if (src == numsSize-1)
	{
		nums[dst] = nums[src];
		dst++;
	}
	return dst;
}
int main()
{
	int nums[10] = { 1,1,2,3,4,4,5,6,9,10 };
	int ret = removeDuplicates(nums, 10);
	printf("%d\n", ret);
	return 0;
}